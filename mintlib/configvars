include $(top_srcdir)/../CONFIGVARS

# This file is being included into all Makefiles and into the
# installation script "libinstall".  Please make sure that it can
# serve both as input to "make" and a Bourne shell.

# Define this to the version of the package.
VERSION=0.56.1

# This is where include files get installed.
includedir=${prefix}/include

# This is where the libraries and the startup modules (crt0.o etc.)
# go.
libdir=${prefix}/lib

# This is where manpages get installed.
mandir=${prefix}/share/man

# This is where system programs that are not necessary for booting the
# system get installed.
sbindir=${prefix}/sbin

# This is where system programs that are necessary for booting the
# system get installed.  If your general prefix is "/usr" (i. e.
# you replace your system files with this distribution, you should
# choose "/sbin".  If your general prefix is "/usr/local" (or something
# else, then "$prefix/sbin" will be alright.
#bootsbindir=${prefix}/sbin
bootsbindir=/sbin

# Define this to "no" if you don't want to let the installation 
# routines remove stale include files from your system's include
# directories.  Unless you build an rpm or do cross-compiling
# you should leave that as "yes".
HEADER_CLEANUP=yes

# Define this to the name of an awk program on your system.
AWK=awk

#####################################################################
# Time zone stuff.
#####################################################################
# Important note: Along with the tz database comes a shell script
# "tzselect".  This script requires a korn shell.  This is usually
# no problem with MiNT because bash is assez korn shell compatible.
# you should create a symbolic link
#	ln -s /bin/bash /bin/ksh
# before running the script.
#
# When cross-compiling nothing will get installed in the tz
# tz subdirectory.  Only the binaries zdump and zic will get build
# but not installed.

# Change the line below for your time zone (after finding the zone 
# you want in the time zone files, or adding it to a time zone file).
# Alternately, if you discover you've got the wrong time zone, you 
# can just
#	zic -l rightzone
# after installation to correct things.
# Use the command
#	make zonenames
# to get a list of the values you can use for LOCALTIME.  If you have
# a binary distribution simply run the installation script libinstall.
# You will then find a list of possible zonenames in this directory
# in the file "zonenames".
#
# The default setting "Factory" is also safe.  Whenever you use a
# program that supports the tz database and your timezone is still
# "Factory" its output will remind you to run "tz".
#
# This variable gets overridden if the file /etc/sparemint/timezone
# exists and it defines a variable "TIMEZONE".
LOCALTIME=Factory

# If you want something other than Eastern United States time as a
# template for handling POSIX-style time zone environment variables,
# change the line below (after finding the zone you want in the time 
# zone files, or adding it to a time zone file).  (When a POSIX-style
# environment variable is handled, the rules in the template file are 
# used to determine "spring forward" and "fall back" days and times; 
# the environment variable itself specifies UTC offsets of standard 
# and summer time.)
# Alternately, if you discover you've got the wrong time zone, you 
# can just
#	zic -p rightzone
# to correct things.
# Use the command
#	make zonenames
# to get a list of the values you can use for POSIXRULES.  If you have
# a binary distribution simply run the installation script libinstall.
# You will then find a list of possible zonenames in this directory
# in the file "zonenames".
# If you want POSIX compatibility, use "America/New_York".  But you
# must be a very POSIX compatible mind if you do not choose your
# hometown instead.
#
# This variable gets overridden if the file /etc/sparemint/timezone
# exists and it defines a variable "TIMEZONE".
POSIXRULES=America/New_York

# All time zone stuff gets put in subdirectories of...
# Note that this variable defaults to "/usr" and not "/usr/local".
# If you change the installation path you also have to change
# the file src/tzfile.h to reflect your different setting.
TZTOPDIR=${prefix}

# "Compiled" time zone information is placed in the "TZDIR" directory
# (and subdirectories).
# Use an absolute path name for TZDIR unless you're just testing the 
# software.  Again, take care that this setting is synchronized with
# src/tzfile.h.
TZDIR=${TZTOPDIR}/share/zoneinfo

# If you always want time values interpreted as "seconds since the epoch
# (not counting leap seconds)", use
#	REDO=posix_only
# below.  If you always want right time values interpreted as "seconds since
# the epoch" (counting leap seconds)", use
#	REDO=right_only
# below.  If you want both sets of data available, with leap seconds not
# counted normally, use
#	REDO=posix_right
# below.  If you want both sets of data available, with leap seconds counted
# normally, use
#	REDO=right_posix
# below.
# POSIX mandates that leap seconds not be counted; for compatibility with it,
# use either "posix_only" or "posix_right".  If you don't want to install
# any timezone database specifiy "REDO=none".
REDO=posix_right

# If you want zic's -s option used when installing, uncomment the next line
# (see zic(8) for details).
# ZFLAGS=-s

# Define this to the name of a korn shell compatible shell on your 
# system.  Usually the default "/bin/bash" is alright.
KSH=/bin/bash

#####################################################################
# End of time zone stuff.
#####################################################################

# The following variables shouldn't be changed by the user.
TAR=tar
GZIP=--best

